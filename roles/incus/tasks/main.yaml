---
- name: Install Incus via apt
  apt: 
    name: incus

- name: Run whoami without become.
  command: whoami
  changed_when: false
  become: false
  register: whoami

- name: Append user to incus-admin group
  user:
    name: "{{ whoami.stdout }}"
    groups: incus-admin
    append: true

- name: Reset connection so incus-admin group is picked up
  meta: reset_connection

- name: Check that ssh key exists
  stat:
    path: "/home/{{ whoami.stdout }}/.ssh/lxc.id_ed25519"
  register: stat_result

- name: Generate Incus user SSH key
  command: "ssh-keygen -t ed25519 -f /home/{{ whoami.stdout }}/.ssh/lxc.id_ed25519 -q -N \"\""
  when: not stat_result.stat.exists

- name: Setting up ssh private key permission
  ansible.builtin.file:
    path: "/home/{{ whoami.stdout }}/.ssh/lxc.id_ed25519"
    mode: '0600'
    owner: "{{ whoami.stdout }}"
    group: "{{ whoami.stdout }}"

- name: Setting up ssh public key permission
  ansible.builtin.file:
    path: "/home/{{ whoami.stdout }}/.ssh/lxc.id_ed25519.pub"
    mode: '0644'
    owner: "{{ whoami.stdout }}"
    group: "{{ whoami.stdout }}"

- name: Creating incus restoration temporary files
  command: mkdir -p .temp-restore-incus

- name: Copying Incus preseed config
  template: 
    src: preseed.yaml
    dest: .temp-restore-incus/preseed.yaml

- name: Echo public ssh key
  command: cat "/home/{{ whoami.stdout }}/.ssh/lxc.id_ed25519.pub"
  register: pubkey

- name: Replace authorized public ssh key into Incus preseed file
  replace:
    path: .temp-restore-incus/preseed.yaml
    regexp: '(ssh-ed25519)'
    replace: "{{ pubkey.stdout }}"

- name: Init minimal Incus from template
  shell: cat .temp-restore-incus/preseed.yaml | incus admin init --preseed

- name: Remove incus restoration temporary files
  command: rm -rf .temp-restore-incus

- name: Copying Incus DNS Config resolution service through systemd-resolved
  template: 
    src: systemd/system/dns-incusbr0.service
    dest: /etc/systemd/system/dns-incusbr0.service
    mode: '755'
  notify: 
  - restart systemd resolved
  - restart dns incusbr0 systemd-resolved

- name: Setting up ssh client config, checking ssh config file if exists
  ansible.builtin.file:
    path: "/home/{{ whoami.stdout }}/.ssh/config"
    state: touch
    mode: '0600'
    owner: "{{ whoami.stdout }}"
    group: "{{ whoami.stdout }}"

- name: Checking if ssh has incude config directory
  lineinfile:
    state: absent
    path: "/home/{{ whoami.stdout }}/.ssh/config"
    regexp: "^Include conf.d/*"
  check_mode: true
  changed_when: false
  register: check

- name: Updating ssh config to include conf.d directory
  lineinfile:
    state: present
    path: "/home/{{ whoami.stdout }}/.ssh/config"
    line: "Include conf.d/*"
  when: check.found == 0

- name: Creating .ssh/conf.d directory
  ansible.builtin.file:
    path: "/home/{{ whoami.stdout }}/.ssh/conf.d/"
    state: directory
    mode: '0755'
    owner: "{{ whoami.stdout }}"
    group: "{{ whoami.stdout }}"

- name: Creating .ssh/conf.d directory
  ansible.builtin.template:
    src: ssh/conf.d/incus
    dest: "/home/{{ whoami.stdout }}/.ssh/conf.d/incus"
    mode: '0600'
    owner: "{{ whoami.stdout }}"
    group: "{{ whoami.stdout }}"